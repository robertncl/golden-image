name: Sync Images to Azure Container Registry

on:
  workflow_run:
    workflows: ["Golden Image Build and Test"]
    types:
      - completed
    branches: [main]
  workflow_dispatch:
    inputs:
      image_name:
        description: 'Specific image to sync (optional)'
        required: false
        type: string
      image_tag:
        description: 'Image tag to sync (optional)'
        required: false
        type: string
        default: 'latest'

env:
  GHCR_REGISTRY: ghcr.io
  GHCR_NAMESPACE: ${{ github.repository_owner }}

jobs:
  # Sync all images to ACR
  sync-all-images:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.GHCR_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Log in to Azure Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Sync all images to ACR
      run: |
        # Set environment variables for the sync script
        export GHCR_REGISTRY=${{ env.GHCR_REGISTRY }}
        export GHCR_NAMESPACE=${{ env.GHCR_NAMESPACE }}
        export ACR_LOGIN_SERVER=${{ secrets.ACR_LOGIN_SERVER }}
        export ACR_USERNAME=${{ secrets.ACR_USERNAME }}
        export ACR_PASSWORD=${{ secrets.ACR_PASSWORD }}
        export BASE_IMAGE_TAG=latest
        export PLATFORM_IMAGE_TAG=latest
        
        # Run the sync script
        ./scripts/registry-sync.sh sync-all

    - name: Upload sync results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: acr-sync-results
        path: reports/
        retention-days: 30

  # Sync specific image to ACR (manual trigger)
  sync-specific-image:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.image_name }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.GHCR_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Log in to Azure Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Sync specific image to ACR
      run: |
        # Set environment variables for the sync script
        export GHCR_REGISTRY=${{ env.GHCR_REGISTRY }}
        export GHCR_NAMESPACE=${{ env.GHCR_NAMESPACE }}
        export ACR_LOGIN_SERVER=${{ secrets.ACR_LOGIN_SERVER }}
        export ACR_USERNAME=${{ secrets.ACR_USERNAME }}
        export ACR_PASSWORD=${{ secrets.ACR_PASSWORD }}
        export BASE_IMAGE_TAG=latest
        export PLATFORM_IMAGE_TAG=latest
        
        # Run the sync script for specific image
        ./scripts/registry-sync.sh sync-image ${{ github.event.inputs.image_name }} ${{ github.event.inputs.image_tag }}

  # Check sync status
  check-sync-status:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.GHCR_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Log in to Azure Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Check sync status
      run: |
        # Set environment variables for the sync script
        export GHCR_REGISTRY=${{ env.GHCR_REGISTRY }}
        export GHCR_NAMESPACE=${{ env.GHCR_NAMESPACE }}
        export ACR_LOGIN_SERVER=${{ secrets.ACR_LOGIN_SERVER }}
        export ACR_USERNAME=${{ secrets.ACR_USERNAME }}
        export ACR_PASSWORD=${{ secrets.ACR_PASSWORD }}
        export BASE_IMAGE_TAG=latest
        export PLATFORM_IMAGE_TAG=latest
        
        # Check sync status
        ./scripts/registry-sync.sh status

  # Notify sync completion
  notify-sync-completion:
    runs-on: ubuntu-latest
    needs: [sync-all-images, sync-specific-image]
    if: ${{ always() && (needs.sync-all-images.result == 'success' || needs.sync-specific-image.result == 'success') }}
    
    steps:
    - name: Notify sync completion
      run: |
        echo "âœ… Image sync to ACR completed successfully!"
        echo "ðŸ“Š Sync Summary:"
        echo "  - Source: GitHub Container Registry"
        echo "  - Destination: Azure Container Registry"
        echo "  - Triggered by: ${{ github.event_name }}"
        
        if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ "${{ github.event.inputs.image_name }}" ]; then
          echo "  - Synced image: ${{ github.event.inputs.image_name }}:${{ github.event.inputs.image_tag }}"
        else
          echo "  - Synced all images"
        fi 